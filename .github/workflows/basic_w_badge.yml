name: Test get_started Unit Tests with Report
on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    - cron: '30 22 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: 
  actions: read
  security-events: write

jobs:
  ci_test:
    
    runs-on: ubuntu-latest   
    permissions:
      id-token: write
      contents: read
    outputs:
      avhresult: ${{ steps.avh.conclusion }}
      testbadge: ${{ steps.avh.outputs.badge }} 

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'    

      - name: Install system packages
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get install libpython3.9 libtinfo5

      - name: Activate vcpkg
        uses: ARM-software/cmsis-actions/vcpkg@v1

      - name: Activate Arm tool license
        uses: ARM-software/cmsis-actions/armlm@v1
  
      - name: Build
        run: |
          echo "Building get started example ..."
          cbuild get_started.csolution.yml --packs --update-rte --context .debug+avh 

      - name: Execute
        run: |
          echo "Running get started example ..."
          FVP_MPS2_Cortex-M3 --simlimit 10 -f Project/fvp_config.txt -a out/Project/avh/debug/Project.elf | tee model.log
          echo "Checking output..."
          test "$(grep "FAIL: " model.log | wc -l)" -eq 0

          - name: Archive results
          uses: actions/upload-artifact@v3
          with:
            name: results
            path: |
              basic/basic-*.zip
              basic/basic-*.xunit
            retention-days: 1
            if-no-files-found: error
          if: always()
    
      - name: Publish test results
        uses: mikepenz/action-junit-report@v3
        with:
            check_name: "Test results"
            report_paths: basic/basic-*.xunit
        if: always()
    
  badge:
    if: always() && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: ci_test
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          ref: badges
    
      - name: Update badge
        run: |
            mkdir -p .github/badges
            cd .github/badges
            rm -f basic.yml.*.svg
            if [[ "${{ needs.ci_test.outputs.avhresult }}" == "success" ]]; then
              cp vht-completed.svg basic.yml.vht.svg
            else
              cp vht-failed.svg basic.yml.vht.svg
            fi
            curl -o basic.yml.unittest.svg https://img.shields.io/badge/${{ needs.ci_test.outputs.testbadge }}
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add basic.yml.*.svg
            if git commit -m "Update badges for workflow basic.yml"; then
              git push
            fi